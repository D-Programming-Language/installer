steps:
  - script: |
      :: Use Windows CRLF line endings for checked-out text files
      git config --global core.autocrlf true
      set
    displayName: Print environment variables
  - checkout: self
    fetchDepth: 1
  - download: current
    artifact: docs
  - script: |
      powershell -command "& { iwr https://github.com/ldc-developers/ldc/releases/download/v$(HOST_LDC_VERSION)/ldc2-$(HOST_LDC_VERSION)-windows-multilib.7z -OutFile ldc.7z }"
      7z x ldc.7z
      move ldc2-$(HOST_LDC_VERSION)-windows-multilib ldc2
      powershell -command "& { iwr https://downloads.dlang.org/other/dm857c.zip -OutFile dmc.zip }"
      7z x dmc.zip
      powershell -command "& { iwr http://ftp.digitalmars.com/sppn.zip -OutFile sppn.zip }"
      7z x -odm/bin sppn.zip
      powershell -command "& { iwr http://ftp.digitalmars.com/bup.zip -OutFile bup.zip }"
      7z x bup.zip dm/bin/implib.exe
      powershell -command "& { iwr https://nsis.sourceforge.io/mediawiki/images/c/c9/Inetc.zip -OutFile inetc.zip }"
      7z x inetc.zip -y -bb1 "-oc:\Program Files (x86)\NSIS"
    displayName: Install prerequisites
  - script: |
      unzip "%PIPELINE_WORKSPACE%/docs/docs.zip"
      move work\dlang.org\web create_dmd_release\docs
    displayName: Unzipping docs
  - script: |
      @echo on
      powershell -command "& { iwr https://dlang.org/d-keyring.gpg -OutFile d-keyring.gpg }"
      gpg --import d-keyring.gpg
      set PATH=%CD%\dm\bin;%PATH%
      cd create_dmd_release
      ..\ldc2\bin\ldmd2 -g build_all.d common.d -version=NoVagrant || exit /B 1
      copy ..\ldc2\bin\libcurl.dll .
      build_all v%HOST_LDC_VERSION% %BRANCH% || exit /B 1
    displayName: Build release
  - script: |
      7z x create_dmd_release\build\dmd.$(BRANCH).windows.zip -odmd.$(BRANCH).windows
    displayName: Unzipping build
  - script: |
      echo on
      "c:\Program Files (x86)\NSIS\makensis" /version
      for /f %%v in (dmd.$(BRANCH).windows\dmd2\src\version) do set ver=%%v
      cd windows
      "c:\Program Files (x86)\NSIS\makensis" /DVersion2=%ver% /DEmbedD2Dir=..\dmd.$(BRANCH).windows\dmd2 d2-installer.nsi
      cd ..
      md artifacts
      copy windows\*.exe artifacts
    displayName: Build installer
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: win_release
      targetPath: artifacts
    displayName: Publish artifacts
