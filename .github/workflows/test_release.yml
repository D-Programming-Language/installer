# Github Action to verify the releases build by the current repo / the workflow
# defined in build_release_template.yml.

name: test_release

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build_release:
    name: "Default release build"
    if: ${{ github.repository == 'dlang/installer' }}
    uses: ./.github/workflows/build_release_template.yml
    with:
      # Use the same branch/tag, or the targeted branch for PRs
      release_branch: ${{ github.base_ref || github.ref_name }}

      # Empty = use the repository/branch that triggered the build
      installer_repo:
      installer_branch:

  validate_build:
    name: Validate results of build_release_template.yml
    needs: build_release

    strategy:
      fail-fast: false
      matrix:

        include:
          - host: windows-latest
            os: windows
            build: dmd.${{ github.base_ref || github.ref_name }}.windows.7z
          - host: macos-latest
            os: osx
            build: dmd.${{ github.base_ref || github.ref_name }}.osx.tar.xz
          - host: ubuntu-latest
            os: linux
            build: dmd.${{ github.base_ref || github.ref_name }}.linux.tar.xz
          - host: macos-12
            os: freebsd
            build: dmd.${{ github.base_ref || github.ref_name }}.freebsd-64.tar.xz

    runs-on: ${{ matrix.host }}

    env:
      OS: ${{ matrix.os }}
      BUILD: ${{ matrix.build }}

    steps:
      - name: Download generated releases from the artifacts
        id: download-release
        uses: actions/download-artifact@v3
        with:
          name: dmd-release

      - name: Clone installer repo
        uses: actions/checkout@v3
        with:
          path: installer

      - name: Check ${{ matrix.os }} artifacts
        id: check
        if: ${{ matrix.os != 'freebsd' }}
        shell: bash
        run: source ./installer/test/release/validate_release.sh

      - name: Check ${{ matrix.os }} artifacts in a VM
        if: ${{ matrix.os == 'freebsd' }}
        uses: cross-platform-actions/action@v0.21.1
        with:
          operating_system: freebsd
          hypervisor: qemu
          memory: 8G
          version: '12.2'
          environment_variables: OS BUILD
          shell: bash
          run: source ./installer/test/release/validate_release.sh

  validate_build_metadata:
    name: Validate outputs of build_release_template.yml
    runs-on: ubuntu-latest
    needs: build_release

    # Revisions built above
    env:
      DMD_REF: ${{ needs.build_release.outputs.dmd-revision }}
      PHOBOS_REF: ${{ needs.build_release.outputs.phobos-revision }}

    steps:
      - name: Check outputs
        shell: bash
        run: |
          set -eux

          # Check that revisions are set
          [ "$DMD_REF" != "" ]
          [ "$PHOBOS_REF" != "" ]
